// Code generated by "stringer -type=Type"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Unknown-0]
	_ = x[Error-1]
	_ = x[EOF-2]
	_ = x[KeywordAbort-3]
	_ = x[KeywordAction-4]
	_ = x[KeywordAdd-5]
	_ = x[KeywordAfter-6]
	_ = x[KeywordAll-7]
	_ = x[KeywordAlter-8]
	_ = x[KeywordAnalyze-9]
	_ = x[KeywordAnd-10]
	_ = x[KeywordAs-11]
	_ = x[KeywordAsc-12]
	_ = x[KeywordAttach-13]
	_ = x[KeywordAutoincrement-14]
	_ = x[KeywordBefore-15]
	_ = x[KeywordBegin-16]
	_ = x[KeywordBetween-17]
	_ = x[KeywordBy-18]
	_ = x[KeywordCascade-19]
	_ = x[KeywordCase-20]
	_ = x[KeywordCast-21]
	_ = x[KeywordCheck-22]
	_ = x[KeywordCollate-23]
	_ = x[KeywordColumn-24]
	_ = x[KeywordCommit-25]
	_ = x[KeywordConflict-26]
	_ = x[KeywordConstraint-27]
	_ = x[KeywordCreate-28]
	_ = x[KeywordCross-29]
	_ = x[KeywordCurrent-30]
	_ = x[KeywordCurrentDate-31]
	_ = x[KeywordCurrentTime-32]
	_ = x[KeywordCurrentTimestamp-33]
	_ = x[KeywordDatabase-34]
	_ = x[KeywordDefault-35]
	_ = x[KeywordDeferrable-36]
	_ = x[KeywordDeferred-37]
	_ = x[KeywordDelete-38]
	_ = x[KeywordDesc-39]
	_ = x[KeywordDetach-40]
	_ = x[KeywordDistinct-41]
	_ = x[KeywordDo-42]
	_ = x[KeywordDrop-43]
	_ = x[KeywordEach-44]
	_ = x[KeywordElse-45]
	_ = x[KeywordEnd-46]
	_ = x[KeywordEscape-47]
	_ = x[KeywordExcept-48]
	_ = x[KeywordExclude-49]
	_ = x[KeywordExclusive-50]
	_ = x[KeywordExists-51]
	_ = x[KeywordExplain-52]
	_ = x[KeywordFail-53]
	_ = x[KeywordFilter-54]
	_ = x[KeywordFirst-55]
	_ = x[KeywordFollowing-56]
	_ = x[KeywordFor-57]
	_ = x[KeywordForeign-58]
	_ = x[KeywordFrom-59]
	_ = x[KeywordFull-60]
	_ = x[KeywordGlob-61]
	_ = x[KeywordGroup-62]
	_ = x[KeywordGroups-63]
	_ = x[KeywordHaving-64]
	_ = x[KeywordIf-65]
	_ = x[KeywordIgnore-66]
	_ = x[KeywordImmediate-67]
	_ = x[KeywordIn-68]
	_ = x[KeywordIndex-69]
	_ = x[KeywordIndexed-70]
	_ = x[KeywordInitially-71]
	_ = x[KeywordInner-72]
	_ = x[KeywordInsert-73]
	_ = x[KeywordInstead-74]
	_ = x[KeywordIntersect-75]
	_ = x[KeywordInto-76]
	_ = x[KeywordIs-77]
	_ = x[KeywordIsnull-78]
	_ = x[KeywordJoin-79]
	_ = x[KeywordKey-80]
	_ = x[KeywordLast-81]
	_ = x[KeywordLeft-82]
	_ = x[KeywordLike-83]
	_ = x[KeywordLimit-84]
	_ = x[KeywordMatch-85]
	_ = x[KeywordNatural-86]
	_ = x[KeywordNo-87]
	_ = x[KeywordNot-88]
	_ = x[KeywordNothing-89]
	_ = x[KeywordNotnull-90]
	_ = x[KeywordNull-91]
	_ = x[KeywordNulls-92]
	_ = x[KeywordOf-93]
	_ = x[KeywordOffset-94]
	_ = x[KeywordOn-95]
	_ = x[KeywordOr-96]
	_ = x[KeywordOrder-97]
	_ = x[KeywordOthers-98]
	_ = x[KeywordOuter-99]
	_ = x[KeywordOver-100]
	_ = x[KeywordPartition-101]
	_ = x[KeywordPlan-102]
	_ = x[KeywordPragma-103]
	_ = x[KeywordPreceding-104]
	_ = x[KeywordPrimary-105]
	_ = x[KeywordQuery-106]
	_ = x[KeywordRaise-107]
	_ = x[KeywordRange-108]
	_ = x[KeywordRecursive-109]
	_ = x[KeywordReferences-110]
	_ = x[KeywordRegexp-111]
	_ = x[KeywordReindex-112]
	_ = x[KeywordRelease-113]
	_ = x[KeywordRename-114]
	_ = x[KeywordReplace-115]
	_ = x[KeywordRestrict-116]
	_ = x[KeywordRight-117]
	_ = x[KeywordRollback-118]
	_ = x[KeywordRow-119]
	_ = x[KeywordRows-120]
	_ = x[KeywordSavepoint-121]
	_ = x[KeywordSelect-122]
	_ = x[KeywordSet-123]
	_ = x[KeywordTable-124]
	_ = x[KeywordTemp-125]
	_ = x[KeywordTemporary-126]
	_ = x[KeywordThen-127]
	_ = x[KeywordTies-128]
	_ = x[KeywordTo-129]
	_ = x[KeywordTransaction-130]
	_ = x[KeywordTrigger-131]
	_ = x[KeywordUnbounded-132]
	_ = x[KeywordUnion-133]
	_ = x[KeywordUnique-134]
	_ = x[KeywordUpdate-135]
	_ = x[KeywordUsing-136]
	_ = x[KeywordVacuum-137]
	_ = x[KeywordValues-138]
	_ = x[KeywordView-139]
	_ = x[KeywordVirtual-140]
	_ = x[KeywordWhen-141]
	_ = x[KeywordWhere-142]
	_ = x[KeywordWindow-143]
	_ = x[KeywordWith-144]
	_ = x[KeywordWithout-145]
}

const _Type_name = "UnknownErrorEOFKeywordAbortKeywordActionKeywordAddKeywordAfterKeywordAllKeywordAlterKeywordAnalyzeKeywordAndKeywordAsKeywordAscKeywordAttachKeywordAutoincrementKeywordBeforeKeywordBeginKeywordBetweenKeywordByKeywordCascadeKeywordCaseKeywordCastKeywordCheckKeywordCollateKeywordColumnKeywordCommitKeywordConflictKeywordConstraintKeywordCreateKeywordCrossKeywordCurrentKeywordCurrentDateKeywordCurrentTimeKeywordCurrentTimestampKeywordDatabaseKeywordDefaultKeywordDeferrableKeywordDeferredKeywordDeleteKeywordDescKeywordDetachKeywordDistinctKeywordDoKeywordDropKeywordEachKeywordElseKeywordEndKeywordEscapeKeywordExceptKeywordExcludeKeywordExclusiveKeywordExistsKeywordExplainKeywordFailKeywordFilterKeywordFirstKeywordFollowingKeywordForKeywordForeignKeywordFromKeywordFullKeywordGlobKeywordGroupKeywordGroupsKeywordHavingKeywordIfKeywordIgnoreKeywordImmediateKeywordInKeywordIndexKeywordIndexedKeywordInitiallyKeywordInnerKeywordInsertKeywordInsteadKeywordIntersectKeywordIntoKeywordIsKeywordIsnullKeywordJoinKeywordKeyKeywordLastKeywordLeftKeywordLikeKeywordLimitKeywordMatchKeywordNaturalKeywordNoKeywordNotKeywordNothingKeywordNotnullKeywordNullKeywordNullsKeywordOfKeywordOffsetKeywordOnKeywordOrKeywordOrderKeywordOthersKeywordOuterKeywordOverKeywordPartitionKeywordPlanKeywordPragmaKeywordPrecedingKeywordPrimaryKeywordQueryKeywordRaiseKeywordRangeKeywordRecursiveKeywordReferencesKeywordRegexpKeywordReindexKeywordReleaseKeywordRenameKeywordReplaceKeywordRestrictKeywordRightKeywordRollbackKeywordRowKeywordRowsKeywordSavepointKeywordSelectKeywordSetKeywordTableKeywordTempKeywordTemporaryKeywordThenKeywordTiesKeywordToKeywordTransactionKeywordTriggerKeywordUnboundedKeywordUnionKeywordUniqueKeywordUpdateKeywordUsingKeywordVacuumKeywordValuesKeywordViewKeywordVirtualKeywordWhenKeywordWhereKeywordWindowKeywordWithKeywordWithout"

var _Type_index = [...]uint16{0, 7, 12, 15, 27, 40, 50, 62, 72, 84, 98, 108, 117, 127, 140, 160, 173, 185, 199, 208, 222, 233, 244, 256, 270, 283, 296, 311, 328, 341, 353, 367, 385, 403, 426, 441, 455, 472, 487, 500, 511, 524, 539, 548, 559, 570, 581, 591, 604, 617, 631, 647, 660, 674, 685, 698, 710, 726, 736, 750, 761, 772, 783, 795, 808, 821, 830, 843, 859, 868, 880, 894, 910, 922, 935, 949, 965, 976, 985, 998, 1009, 1019, 1030, 1041, 1052, 1064, 1076, 1090, 1099, 1109, 1123, 1137, 1148, 1160, 1169, 1182, 1191, 1200, 1212, 1225, 1237, 1248, 1264, 1275, 1288, 1304, 1318, 1330, 1342, 1354, 1370, 1387, 1400, 1414, 1428, 1441, 1455, 1470, 1482, 1497, 1507, 1518, 1534, 1547, 1557, 1569, 1580, 1596, 1607, 1618, 1627, 1645, 1659, 1675, 1687, 1700, 1713, 1725, 1738, 1751, 1762, 1776, 1787, 1799, 1812, 1823, 1837}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
